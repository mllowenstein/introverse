@import '~@angular/material/_theming.scss';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$mat-soft-green: (
  50: #edf8f1,
  100: #d1ecdd,
  200: #b3e0c6,
  300: #95d4af,
  400: #7eca9d,
  500: #67c18c,
  600: #5fbb84,
  700: #54b379,
  800: #4aab6f,
  900: #399e5c,
  A100: #ebfff2,
  A200: #b8ffd0,
  A400: #85ffae,
  A700: #6cff9d,
  contrast: (
    50: $black-87-opacity,
    100: $black-87-opacity,
    200: $black-87-opacity,
    300: $black-87-opacity,
    400: $black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: $white-87-opacity,
    900: $white-87-opacity,
    A100: $black-87-opacity,
    A200: $black-87-opacity,
    A400: $black-87-opacity,
    A700: $black-87-opacity,
  ),
);

$app-primary: mat-palette($mat-blue);
$app-accent: mat-palette($mat-soft-green);
$app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($app-theme);
